syntax = "proto3";

package data;

import  "senml.proto";

message SenMLPackMap {
    map<string, senml_protobuf.Project> projects = 3;
}

message Error {
    int32 code = 1;
    string message = 2
}

service Data {

    rpc Submit(SenMLPackMap) returns(string);

    // Adds data points for multiple data streams
    // data is a map where keys are data stream ids
    // streams is a map where keys are data stream ids
    Submit(data map[string]senml.Pack, streams map[string]*registry.DataStream) error

    // Queries data for specified data streams
    //Query(q Query, page, PerPage int, streams ...*registry.DataStream) (senml.Pack, int, error)
    Query(q Query, streams ...*registry.DataStream) (pack senml.Pack, total *int, err error)

    // EventListener includes methods for event handling
    registry.EventListener
}